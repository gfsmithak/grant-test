<#Made this for ACA. Willow needs to check logon times for various users/computers periodically over the next few months. 
This way she can do it herself instead of having to call us every time. 
There are definitely better ways to do this, but we're not officially supporting it- just put this together as a favor. 
#>

Function Get-Logons {

[cmdletbinding()]
Param(
[parameter(mandatory=$true)]
$computername,
[parameter(mandatory=$true)]
$username,
[parameter(mandatory=$true)]
$PreviousDays

)
while (!(test-connection $computername)){
$computername = read-host "Please enter a valid computer name, or type 'exit' to quit"
if ($computername -eq "exit"){
exit
}
}


$date = (get-date).adddays(-($PreviousDays))
try {
$log = get-eventlog security -computername $computername -after $date
$LogEnd = $log[($log.count)-1].timegenerated
}
catch {
write-host "Unable to retrieve event logs`nError Message:`n`n$($error[0])`n`nError log saved to C:\users\public\documents\Log.txt, exiting script"
$Error > "C:\users\public\documents\log.txt"
read-host "Press any key to quit"
exit
}
if ($LogEnd -gt $date){
write-host "Logs only available since $LogEnd"
}
$Logons = $log | ? {$_.eventid -eq "4624" -and $_.replacementstrings[5] -eq "$username"} | select -ExpandProperty timegenerated
$Logoffs = $Log | ? {$_.eventid -eq "4647" -and $_.replacementstrings[1] -eq "$username"} | select -ExpandProperty timegenerated
$body += "Report - $username on $computername`n"
if (!($logons)){
$body += "`nNo logons found for $username on $computername since $LogEnd`n`n"
}
else{
$body += "`nLogons:`n`n"
$logons | % {$body += "$_`n"}
}
if (!($logoffs)){
$body += "`nNo logoffs found for $username on $computername since $LogEnd`n`n"
}
else {
$body += "`nLogoffs:`n`n"
$Logoffs | % {$body += "$_`n"}
}
try{
write-host "Please provide your email credentials"
$credential = Get-Credential
send-mailmessage -from $credential.username -to $credential.username -subject "Logon activity for $username on $computername" -body "$body" -credential ($credential) -usessl -smtpserver smtp.office365.com -port "587"
Write-Host "Report sent to $($credential.username)"
}
catch
{
write-host "Email failed. Writing output to C:\users\public\documents\$username.txt instead. Writing error log to C:\users\public\documents\log.txt"
$error > "C:\users\public\documents\log.txt"
"Logons:`n`n" | out-file "C:\users\public\documents\$username.txt" -append
$logons | % {"$_`n" | out-file "C:\users\public\documents\$username.txt" -append}
"Logoffs:`n`n" | out-file "C:\users\public\documents\$username.txt" -append
$logoffs | % {"$_`n" | out-file "C:\users\public\documents\$username.txt" -append}
}
write-host "Done! Press any key to quit"
exit
}

Get-Logons
