Function Get-DellWarranty {
        
    param(
    [parameter(valuefrompipeline=$true)]
    $Tags = (read-host "Please enter the path to a text file containing your serial numbers."),
    [parameter(Mandatory=$True)]
    $DellAPIKey

    )

    [string]$ContentType = "application/json"

    Write-host "Authenitcating, please wait...`n"

    try {
        
        Invoke-RestMethod -URI "https://api.dell.com/support/assetinfo/v4/getassetwarranty/0?apikey=$($DellAPIKey)" -ContentType "application/json" -Method Get

        }

    catch {

        Write-host "Unable to authenticate!, see error below.`n"
        $Error[0]

        }

  gc $tags | % {

    $BaseUri     = "https://api.dell.com/support/assetinfo/v4/getassetwarranty/$($_)?apikey=$($DellAPIKey)"
   
 
    $JSONResponse = Invoke-RestMethod -URI $BaseURI  -ContentType $ContentType -Method Get
    
    $data = $jsonresponse.assetwarrantyresponse.assetentitlementdata 

    $AObj = new-object psobject -property @{Name="$_"}
   
    Foreach ($D in $data) {

        If ($D.EntitlementType -eq "Initial" -and $D.serviceleveldescription -match "Onsite") {
            
            $AObj | add-member noteproperty -name "Ship Date" -value $D.StartDate.split("T")[0]

            $AObJ | Add-member noteproperty -name "Warranty End" -value $D.EndDate.split("T")[0] -ea SilentlyContinue

        }

       elseif  ($D.entitlementtype -eq "Extended"){
            
            $AObj | add-member noteproperty -name "Warranty End" -value $D.enddate.split("T")[0] -force

            }
        
    }

    if (!($AObj.'Ship Date')) 

        {$Aobj | add-member noteproperty -name "Ship Date" -value " "}

    if (!($AObj.'Warranty End')) 

        {$Aobj | add-member noteproperty -name "Warranty End" -value " "}

    Write-host "Data collected for $_"

    $AObj | export-csv "$([Environment]::GetFolderPath("Desktop"))\final.csv" -NoTypeInformation -Append -force

    }

    write-host "Finished! Data output to $([Environment]::GetFolderPath("Desktop"))\final.csv"
}
